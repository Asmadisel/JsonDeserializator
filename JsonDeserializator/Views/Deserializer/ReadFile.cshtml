@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

*@
@using Microsoft.AspNetCore.Components.Web
@using Newtonsoft.Json;
@using JsonDeserializator.Models;
@using Newtonsoft.Json.Serialization;

@model FileInfo
@{


    ViewData["Title"] = "Представление документа";
    List<string> lines = new List<string>();

   
    //using (StreamReader content = new StreamReader(Convert.ToString(Model)))
    //{
     
            using (StreamReader content = new StreamReader(Convert.ToString(Model)))
            {
                string? line;
                while ((line = content.ReadLine()) != null)
                {
                    //Новая строка
                    line += "\n";
                    lines.Add(line);
                }
            }
    //}

}

<!DOCTYPE html>
<html>
<head>
<style> 
textarea {
  width: 100%;
  min-height:500px;
  height: auto;
  padding: 12px 20px;
  box-sizing: border-box;
  border: 2px solid #ccc;
  border-radius: 4px;
  background-color: #f8f8f8;
  font-size: 16px;
  resize: none;
}
</style>
</head>
<body>
<h1> @Model.Name </h1>
<form>
  <textarea>
            @foreach (string l in lines)
            //Вывод всех элементов построчно
            {
                
                    @l 
                
            }
  </textarea>
</form>
    <div class="container">
        <div class="bg-light border rounded border-0 border-light d-flex flex-column justify-content-between ms-auto flex-lg-row p-4 p-md-5" style="padding-bottom: 0px;padding-top: 0px;margin-top: -2px;margin-bottom: 6px;">
            <a class="btn btn-primary disabled fs-5 border rounded m-auto py-2 px-4" role="button" href="#" style="color: var(--bs-btn-color);background: rgb(88,190,86);font-family: Aladin, serif;border-width: 2px;border-color: #055530;" disabled>Изменить</a>
            <div style="margin-bottom: 55px;">
                <small>Выберите нужный объект  для десерилазиции</small><select class="form-select-sm d-xl-flex order-last mb-auto justify-content-xl-start" style="text-align: center;padding-left: 0px;margin-left: 3px;">
                    <optgroup label="Список таблиц">
                       
                        <option value="12" selected>FileModel</option>
                        <option value="13">Student</option>
                        <option value="14">Employers</option>
                    </optgroup>
                </select><a class="btn btn-primary disabled fs-5 border rounded m-auto py-2 px-4" role="button" href="#" style="font-family: Aladin, serif;border-width: 2px;border-color: #041836;" enabled">Записать в базу</a>
            </div>
            @if(Model.Name.EndsWith(".json"))
            {
                //Если файл является json, появляется кнопка для десериализации

                <a  id="tabJS" onclick="OpenTable()" class="btn btn-primary fs-5 border rounded m-auto py-2 px-4" role="button" href="#" style="background: rgb(217,26,49);font-family: Aladin, serif;border-width: 2px;border-color: rgb(58,2,2);">Десериализовать в таблицу</a>
            }
            <a class="btn btn-primary fs-5 border rounded m-auto py-2 px-4" role="button" href="#" style="background: rgb(217,26,49);font-family: Aladin, serif;border-width: 2px;border-color: rgb(58,2,2);">Удалить</a>
            <div class="pb-2 pb-lg-1">
                <h2 class="fw-bold mb-2"></h2>
                <p class="mb-0"></p>
            </div>
            <div class="my-2"></div>
        </div>
    </div>
    
    <table runat="server" id="TheJsonTable" border="1" style="display:none">
        
            @if(Model.Name.EndsWith(".json"))
            {
                    //1-я настройка
                    var settings = new JsonSerializerSettings
            {
            ContractResolver = new CamelCasePropertyNamesContractResolver(),
            Converters = {
            new PropertyBagConverter()
            }
            };
            //Весь массив становится одной строкой
            string output = string.Join("",lines);
            var message = output;
            var des = JsonConvert.DeserializeObject<Message>(message, settings);

            //Вывод элементов
            //Console.WriteLine(des.Id);
            //Console.WriteLine(des.Value);
            //Console.WriteLine(des.Status);
            @foreach (var prop in des.Properties)
            {
            <thead>
                <tr style="width:auto;">
                    <th>
                        @prop.Key
                    </th>
                   
                </tr>
            </thead>
            <tbody>
                <tr> 
                <td>
                @prop.Value
                </td>
                </tr>
            </tbody>
            //Console.WriteLine("{0} : {1}", prop.Key, prop.Value);
            }
}
                
                
        </table>

    @section scripts {
        <script type="text/javascript">
            function OpenTable() {
                let x = document.getElementById("TheJsonTable");
               
                if (x.style.display === "none") {
                    x.style.display = "block";
                    
                } else {
                    x.style.display = "none";
                }
            }
            </script>
    }
</body>